name: CI Helper

permissions:
  contents: read
  pages: write
  id-token: write
  deployments: write

on:
  workflow_call:
    inputs:
      os-name:
        description: "The OS to run the workflow on."
        required: true
        type: string
    secrets:
      REPO_AUTH_TOKEN:
        description: "The GitHub repo auth token."
        required: true
      CANTCACHE_ME_SECRET_KEY:
        description: "The signing key for cantcache.me."
        required: true
      R2_ENDPOINT:
        description: "The R2 endpoint to use."
        required: true
      R2_ACCESS_KEY_ID:
        description: "The R2 access key ID to use."
        required: true
      R2_SECRET_ACCESS_KEY:
        description: "The R2 secret access key to use."
        required: true

defaults:
  run:
    shell: bash

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}

jobs:
  # develop:
  #   runs-on: ${{ inputs.os-name }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up nix
  #       uses: ./.github/actions/setup
  #       with:
  #         REPO_AUTH_TOKEN: ${{ secrets.REPO_AUTH_TOKEN }}
  #         CANTCACHE_ME_SECRET_KEY: ${{ secrets.CANTCACHE_ME_SECRET_KEY }}
  #     - name: Set repeat commands as environment variables
  #       run: |
  #         echo "NIX_DEV_CMD=nix develop \
  #         --print-build-logs \
  #         --accept-flake-config \
  #         --profile dev-profile" >> $GITHUB_ENV

  #         echo "NIX_CACHE_CMD=nix --accept-flake-config --verbose copy \
  #         --to s3://cantcache-me?compression=zstd&endpoint=${{ secrets.R2_ENDPOINT }}" >> $GITHUB_ENV
  #     - name: Build development environment
  #       run: $NIX_DEV_CMD
  #     - name: Cache development environment outputs
  #       run: $NIX_CACHE_CMD

  # build:
  #   needs: develop
  #   runs-on: ${{ inputs.os-name }}
  #   steps:
  #     # Setup
  #     - uses: actions/checkout@v3
  #     - name: Set up nix
  #       uses: ./.github/actions/setup
  #       with:
  #         REPO_AUTH_TOKEN: ${{ secrets.REPO_AUTH_TOKEN }}
  #         CANTCACHE_ME_SECRET_KEY: ${{ secrets.CANTCACHE_ME_SECRET_KEY }}
  #     - name: Set repeat commands as environment variables
  #       run: |
  #         echo "NIX_BUILD_CMD=nix build \
  #         --print-build-logs \
  #         --accept-flake-config" >> $GITHUB_ENV

  #         echo "NIX_CACHE_CMD=nix --accept-flake-config --verbose copy \
  #         --to s3://cantcache-me?compression=zstd&endpoint=${{ secrets.R2_ENDPOINT }}" >> $GITHUB_ENV

  #     # Build
  #     - name: Build outputs
  #       run: $NIX_BUILD_CMD .#{leanInk,alectryon,lean-mdbook,generated-lean-markdown}
  #     - name: Cache outputs
  #       run: $NIX_CACHE_CMD .#{leanInk,alectryon,lean-mdbook,generated-lean-markdown}
  #     - name: Build docs
  #       run: $NIX_BUILD_CMD .#docs
  #     - name: Cache docs
  #       run: $NIX_CACHE_CMD .#docs

  #     # Upload docs
  #     - name: Create archive
  #       run: tar -vv --dereference --hard-dereference --create --file gh-pages-${{ github.sha }}-${{ inputs.os-name }}.tar  --directory result .

  #     - name: Upload archive
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: gh-pages-${{ github.sha }}-${{ inputs.os-name }}
  #         path: gh-pages-${{ github.sha }}-${{ inputs.os-name }}.tar

  deploy:
    runs-on: ubuntu-latest
    # needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v3
      - name: Upload archive
        uses: actions/upload-artifact@v3
        with:
          name: github-pages
          path: ./artifact.tar
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
        with:
          token: ${{ secrets.REPO_AUTH_TOKEN }}
